;;; opentelemetry/proto/logs/v1/logs.proto.lisp
;;;
;;; Generated by the protocol buffer compiler. DO NOT EDIT!

(cl:in-package #:common-lisp-user)

#+sbcl
(cl:progn
 (cl:eval-when (:compile-toplevel) (sb-ext:restrict-compiler-policy 'cl:debug 0 1))
 (cl:declaim (cl:optimize (sb-c:store-coverage-data 0))))

(cl:eval-when (:compile-toplevel :load-toplevel :execute)
  (cl:unless (cl:find-package "CL-PROTOBUFS.OPENTELEMETRY.PROTO.LOGS.V1")
    (cl:defpackage "CL-PROTOBUFS.OPENTELEMETRY.PROTO.LOGS.V1" (:use)
                   (:local-nicknames (#:pi #:cl-protobufs.implementation)))))

(cl:in-package "CL-PROTOBUFS.OPENTELEMETRY.PROTO.LOGS.V1")

(cl:eval-when (:compile-toplevel :load-toplevel :execute)
(pi:define-schema 'logs
    :syntax :proto3

    :package "opentelemetry.proto.logs.v1"
    :import '("opentelemetry/proto/common/v1/common.proto"
    "opentelemetry/proto/resource/v1/resource.proto"))
)


;;; Top-Level enums

(pi:define-enum severity-number
    ()
  (:severity-number-unspecified :index 0)
  (:severity-number-trace :index 1)
  (:severity-number-trace2 :index 2)
  (:severity-number-trace3 :index 3)
  (:severity-number-trace4 :index 4)
  (:severity-number-debug :index 5)
  (:severity-number-debug2 :index 6)
  (:severity-number-debug3 :index 7)
  (:severity-number-debug4 :index 8)
  (:severity-number-info :index 9)
  (:severity-number-info2 :index 10)
  (:severity-number-info3 :index 11)
  (:severity-number-info4 :index 12)
  (:severity-number-warn :index 13)
  (:severity-number-warn2 :index 14)
  (:severity-number-warn3 :index 15)
  (:severity-number-warn4 :index 16)
  (:severity-number-error :index 17)
  (:severity-number-error2 :index 18)
  (:severity-number-error3 :index 19)
  (:severity-number-error4 :index 20)
  (:severity-number-fatal :index 21)
  (:severity-number-fatal2 :index 22)
  (:severity-number-fatal3 :index 23)
  (:severity-number-fatal4 :index 24))

(pi:define-enum log-record-flags
    ()
  (:log-record-flags-do-not-use :index 0)
  (:log-record-flags-trace-flags-mask :index 255))

;;; Top-Level messages

(pi:define-message logs-data
    ()
  ;; Fields
  (resource-logs
   :index 1 :type resource-logs :kind :message :label (:repeated :list) :field-presence :implicit :json-name "resourceLogs"))

(pi:define-message resource-logs
    ()
  ;; Fields
  (resource
   :index 1 :type cl-protobufs.opentelemetry.proto.resource.v1::resource :kind :message :label (:optional) :field-presence :explicit :json-name "resource")
  (scope-logs
   :index 2 :type scope-logs :kind :message :label (:repeated :list) :field-presence :implicit :json-name "scopeLogs")
  (schema-url
   :index 3 :type cl:string :kind :scalar :label (:optional) :field-presence :implicit :json-name "schemaUrl"))

(pi:define-message scope-logs
    ()
  ;; Fields
  (scope
   :index 1 :type cl-protobufs.opentelemetry.proto.common.v1::instrumentation-scope :kind :message :label (:optional) :field-presence :explicit :json-name "scope")
  (log-records
   :index 2 :type log-record :kind :message :label (:repeated :list) :field-presence :implicit :json-name "logRecords")
  (schema-url
   :index 3 :type cl:string :kind :scalar :label (:optional) :field-presence :implicit :json-name "schemaUrl"))

(pi:define-message log-record
    ()
  ;; Fields
  (time-unix-nano
   :index 1 :type cl-protobufs:fixed64 :kind :scalar :label (:optional) :field-presence :implicit :json-name "timeUnixNano")
  (observed-time-unix-nano
   :index 11 :type cl-protobufs:fixed64 :kind :scalar :label (:optional) :field-presence :implicit :json-name "observedTimeUnixNano")
  (severity-number
   :index 2 :type severity-number :kind :enum :label (:optional) :field-presence :implicit :json-name "severityNumber" :default :severity-number-unspecified)
  (severity-text
   :index 3 :type cl:string :kind :scalar :label (:optional) :field-presence :implicit :json-name "severityText")
  (body
   :index 5 :type cl-protobufs.opentelemetry.proto.common.v1::any-value :kind :message :label (:optional) :field-presence :explicit :json-name "body")
  (attributes
   :index 6 :type cl-protobufs.opentelemetry.proto.common.v1::key-value :kind :message :label (:repeated :list) :field-presence :implicit :json-name "attributes")
  (dropped-attributes-count
   :index 7 :type cl-protobufs:uint32 :kind :scalar :label (:optional) :field-presence :implicit :json-name "droppedAttributesCount")
  (flags
   :index 8 :type cl-protobufs:fixed32 :kind :scalar :label (:optional) :field-presence :implicit :json-name "flags")
  (trace-id
   :index 9 :type cl-protobufs:byte-vector :kind :scalar :label (:optional) :field-presence :implicit :json-name "traceId")
  (span-id
   :index 10 :type cl-protobufs:byte-vector :kind :scalar :label (:optional) :field-presence :implicit :json-name "spanId"))

(cl:eval-when (:compile-toplevel :load-toplevel :execute)
(pi:add-file-descriptor #P"opentelemetry/proto/logs/v1/logs.proto" 'logs)
)

(cl:export '(attributes
body
dropped-attributes-count
flags
log-record
log-record-flags
log-record-flags-int-to-keyword
log-record-flags-keyword-to-int
log-records
logs
logs-data
observed-time-unix-nano
resource
resource-logs
schema-url
scope
scope-logs
severity-number
severity-number-int-to-keyword
severity-number-keyword-to-int
severity-text
span-id
time-unix-nano
trace-id))
